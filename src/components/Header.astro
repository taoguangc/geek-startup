---
import NavLink from './NavLink.astro'
import ThemeToggle from './ThemeToggle.astro'
import siteConfig from '../data/global/index.json'

const navLinks = siteConfig.navLinks || []
---

<header class='w-full bg-white border-b-2 border-b-black/5 transition-all duration-300'>
  <div class='container flex flex-row justify-between items-center py-4 md:py-6'>
    <a class='font-serif text-2xl leading-tight font-medium text-theme-foreground sm:text-4xl' href='/'>
      {siteConfig.title}
    </a>

    <nav>
      {
        navLinks.length > 0 && (
          <ul id='menu-items' class='flex gap-6'>
            {navLinks.map(link => (
              <li class='py-1 px-2'>
                <NavLink class='text-gray-500 md:text-base font-medium hover:underline hover:underline-offset-2 hover:decoration-1' href={link.href}>
                  {link.text}
                </NavLink>
              </li>
            ))}
          </ul>
        )
      }
    </nav>

    <ThemeToggle />
  </div>
</header>

<script>
  class HeaderController {
    private header: HTMLElement | null
    private readonly threshold = 200
    private readonly classes = {
      initial: ['bg-white'],
      scrolled: ['fixed', 'top-0', 'left-0', 'z-50', 'bg-gray-200', 'dark:bg-gray-900', 'animate-slideDown']
    }

    constructor() {
      this.header = document.querySelector('header')
      this.init()
    }

    private init() {
      this.handleScroll = this.handleScroll.bind(this)
      window.addEventListener('scroll', this.handleScroll, { passive: true })
    }

    private handleScroll() {
      const isScrolled = window.scrollY > this.threshold
      this.header?.classList.remove(...(isScrolled ? this.classes.initial : this.classes.scrolled))
      this.header?.classList.add(...(isScrolled ? this.classes.scrolled : this.classes.initial))
    }

    public cleanup() {
      window.removeEventListener('scroll', this.handleScroll)
    }
  }

  let controller = new HeaderController()
  document.addEventListener('astro:page-load', () => {
    controller.cleanup()
    controller = new HeaderController()
  })
</script>
