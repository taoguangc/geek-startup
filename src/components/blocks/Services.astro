---
import { Image } from 'astro:assets'
import { getImage } from '../../utils/image'

interface Props {
  title?: string
  subTitle?: string
  image?: string
  items: {
    title: string
    description: string
    serviceImage?: string
  }[]
}

const { title = '', subTitle = '', image = '', items = [] } = Astro.props

// 统一处理所有图片
const processImages = async (images: (string | undefined)[]) => {
  return Promise.all(images.map(img => (img ? getImage(img) : null)))
}

const [processedImage, ...processedServiceImages] = await processImages([image, ...items.map(item => item.serviceImage)])
---

<section class='py-20 md:min-h-screen overflow-hidden' data-scroll-container>
  <div class='flex md:gap-32'>
    <div class='w-5/12 mb-12' data-inview='left' data-delay='0'>
      <h6 class='text-gray-600 mb-6'>{subTitle}</h6>
      <h2 class='text-4xl font-bold mb-12'>{title}</h2>

      <div class='flex flex-col gap-8'>
        {
          items.map((item, index) => (
            <div class='border-b border-gray-300 pb-8 flex flex-row items-center' data-inview='bottom' data-delay={(index * 0.2).toString()}>
              {processedServiceImages[index] && <Image src={processedServiceImages[index]} alt={item.title} width={50} height={50} class='mr-16' />}
              <div>
                <h3 class='text-xl font-semibold pb-4'>{item.title}</h3>
                <p class='text-gray-600 max-w-72'>{item.description}</p>
                <a href='#' class='text-blue-600 hover:text-blue-800 mt-4 inline-block'>
                  了解更多 →
                </a>
              </div>
            </div>
          ))
        }
      </div>
    </div>
    <div class='w-5/12 relative'>
      {processedImage && <Image src={processedImage} alt={title} width='600' height='900' class='w-full parallax' />}
    </div>
  </div>
</section>

<script>
  import { animate, scroll } from 'motion'

  document.querySelectorAll('.parallax').forEach(item => {
    scroll(animate(item, { y: [200, -200] }, { ease: 'linear' }), {
      target: item,
      offset: ['start end', 'end start']
    })
  })
</script>
